version: "3"

services:
  php:
    build: .docker/php
    container_name: sbf-php
    entrypoint: dockerize -template ./.docker/app/.env:.env -template ./.docker/app/.env.testing:.env.testing -wait tcp://mysql:3306 -timeout 40s ./.docker/entrypoint.sh
    environment:
      - _DB_HOST=mysql
      - _DB_DATABASE=sbf_db
      - _DB_USERNAME=root
      - _DB_PASSWORD=root
      - _TEST_DB_HOST=127.0.0.1
      - _TEST_DB_DATABASE=sbf_db_test
      - _TEST_DB_USERNAME=admin
      - _TEST_DB_PASSWORD=jr1207
      - _TEST_MYSQL_ROOT_PASSWORD=root
      - XDEBUG_CONFIG=client_host=172.17.0.1 client_port=9003 start_with_request=yes log=/var/log/xdebug.log
      - XDEBUG_MODE=coverage, debug
      - XDEBUG_SESSION=phpstorm
      - PHP_IDE_CONFIG=serverName=server-docker
      # O server-docker é uma configuração em PHP -> Server em que você colocará e host=localhost porta=8000 e o path mappings
      # pegando a raiz do projeto e apontando pra /var/www
    volumes:
      - .:/var/www
      - ./.docker/php:/usr/local/etc/php/php.ini
    expose:
      - 9003
    networks:
      - sbf

  nginx:
    build: .docker/nginx
    container_name: sbf-nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    volumes:
      - ".:/var/www"
    networks:
      - sbf
    depends_on:
      - php

  mysql:
    build: .docker/mysql
    container_name: sbf-db
    restart: always
    tty: true
    ports:
      - "33007:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
      - ./.docker/mysql:/docker-entrypoint-initdb.d
    environment:
#      - MYSQL_DATABASE=sbf_db
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - sbf

  redis:
    image: redis:alpine
    container_name: sbf-redis
    expose:
      - 6379
    networks:
      - sbf

networks:
  sbf:
    driver: bridge
